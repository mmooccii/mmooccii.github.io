{"version":3,"sources":["components/Item.js","components/ItemList.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","position","display","width","props","boxWidth","height","borderWidth","borderStyle","borderColor","perspective","overflow","top","left","borderRadius","container","image","React","forwardRef","ref","classes","name","url","className","src","alt","margin","inner","zIndex","slides","transformOrigin","controller","justifyContent","button","marginRight","ItemList","wordList","Array","from","_","index","map","n","createRef","items","Items","word","itemRef","push","Item","atari","gsap","utils","random","shuffled","shuffle","shuffledtarget","useEffect","current","set","length","x","y","tl","timeline","Button","variant","color","startIcon","onClick","kill","clear","fromTo","concat","stagger","duration","ease","yoyo","endPos","repeatNum","clamp","parseInt","Math","to","modifiers","unitize","parseFloat","repeat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2457b255.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root : {\n    position: \"absolute\",\n    display: \"block\",\n    width: props => props.boxWidth - 6,\n    height: props => props.boxWidth - 6,\n    borderWidth: 3,\n    borderStyle: \"solid\",\n    borderColor: \"transparent\",\n    perspective: 1500,\n    overflow: \"hidden\",\n    top: 0,\n    left: 0,\n    borderRadius: \"50%\",\n  },\n  container: {\n  },\n  image: {\n    display: \"block\",\n    width: \"100%\",\n    height: \"100%\",\n  }\n})\n\nexport default React.forwardRef((props, ref) => {\n  const classes = useStyles(props)\n  const { name } = props \n  const url = `https://picsum.photos/seed/${name}/300/300`\n\n  return (\n    <div className={classes.root} ref={ref}>\n      <div className={classes.container}>\n        <img src={url} alt=\"sample\" className={classes.image}/>\n      </div>\n    </div>\n  );\n})","import React, { useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport PlayCircleFilledWhiteIcon from '@material-ui/icons/PlayCircleFilledWhite'\nimport Item from './Item'\nimport { makeStyles } from '@material-ui/core/styles'\nimport gsap from \"gsap\"\n\nconst useStyles = makeStyles({\n  root : {\n    display: \"block\",\n    position: \"relative\",\n    width: props => props.boxWidth * 3/2,\n    height: props => props.boxWidth,\n    margin: \"0 auto\",\n    overflow: \"hidden\"\n  },\n  inner: {\n    position: \"absolute\",\n    display: \"block\",\n    width: props => props.boxWidth * 3,\n    height: props => props.boxWidth,\n    top: 0,\n    left: \"-50%\",\n    zIndex: 1\n  },\n  slides: {\n    display: \"block\",\n    position: \"relative\",\n    width: \"100%\",\n    height: \"100%\",\n    transformOrigin: \"50%\"\n  },\n  controller: {\n    margin: 10,\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  button: {\n    marginRight: 20\n  }\n})\n\nfunction ItemList() {\n\n  const boxWidth = 200\n  const slideNum = 16\n\n  const classes = useStyles({boxWidth:boxWidth});\n  const wordList = Array.from(Array(slideNum), (_, index) => index + 1).map((n) => {\n    return \"roulette-slide-\"+n\n  })\n  \n  const container = React.createRef()\n  const slides = React.createRef()\n  let items = []\n\n  const Items = wordList.map((word) => {\n    const itemRef = React.createRef();\n    items.push(itemRef)\n    return <Item key={word} name={word} boxWidth={boxWidth} ref={itemRef}></Item>\n  })\n\n  const atari = gsap.utils.random(items)\n  const shuffled = gsap.utils.shuffle(items)\n  let shuffledtarget = []\n\n  useEffect(() => {\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    shuffledtarget = shuffled.map((ref,index) => {\n      if (atari.current === ref.current) {\n        gsap.set(ref.current, {zIndex: shuffled.length - index, x: boxWidth * 1, y: 0, borderColor:\"#000\"})\n      } else {\n        gsap.set(ref.current, {zIndex: shuffled.length - index, x: boxWidth * 5, y: 0})\n      }\n      return ref.current\n    })\n\n  },[])\n\n  const tl = gsap.timeline()\n\n  function onClick1() {\n    \n    tl.kill()\n    tl.clear()\n\n    gsap.set(shuffledtarget, {\n      zIndex: function(index) {\n        return index\n      },\n      x: boxWidth*5,\n      y:0\n    })\n\n    tl.fromTo(shuffledtarget.concat(shuffledtarget), {x: boxWidth * 5}, {x:\"-=\"+(boxWidth * 8), y: 0, stagger: .3, duration: 1.8, ease: \"linear.none\", yoyo:true})\n    tl.fromTo(atari.current, {x: boxWidth * 5}, {x:\"-=\"+(boxWidth * 8/2), y: 0, duration: 1.8, ease: \"linear.none\"},'-=1.8')\n    return true\n  }\n\n  function onClick2() {\n\n    tl.kill()\n    tl.clear()\n\n    let endPos = boxWidth * (shuffledtarget.length - 2)\n    let repeatNum = gsap.utils.clamp(3,5,parseInt(Math.random()*10,10))\n\n    gsap.set(shuffledtarget, {\n      zIndex: function(index) {\n        return index\n      },\n      x: function(index) {\n\n        if (shuffledtarget[index] === atari.current) {\n          endPos = boxWidth * index - boxWidth\n        }\n        return index * boxWidth\n      },\n      y:0\n    })\n\n    tl.to(shuffledtarget, {\n      duration:1.4,\n      ease: \"none\",\n      x: \"-=\" + endPos,\n      modifiers: {\n        x: gsap.utils.unitize(x => parseFloat(x) % endPos)\n      },\n      repeat: repeatNum,\n      yoyo: true,\n    })\n\n    return true;\n  }\n\n  function onClick3() {\n    \n    tl.kill()\n    tl.clear()\n\n    gsap.set(shuffledtarget, {\n      zIndex: function(index) {\n        return index\n      },\n      x: boxWidth,\n      y: boxWidth\n    })\n\n    tl.fromTo(shuffledtarget.concat(shuffledtarget), {y: boxWidth * 1, x: boxWidth}, {y:\"-=\"+(boxWidth * 3), x: boxWidth, stagger: .6, duration: 1.8, ease: \"linear.none\", yoyo:true})\n    tl.fromTo(atari.current, {y: boxWidth * 1, x: boxWidth}, {y:\"-=\"+(boxWidth), x: boxWidth, duration: 1.8, ease: \"linear.none\"},'-=1.2')\n    return true\n  }\n\n  function onClick4() {\n    const radius = boxWidth*3\n    const inc = 2*Math.PI/shuffledtarget.length\n\n    gsap.set(slides.current, {width: radius*2, height: radius*2})\n    gsap.set(shuffledtarget, {\n      zIndex: function(index) {\n        return index\n      },\n      x: (index) => Math.sin(inc*index)*radius + boxWidth,\n      y: (index) => Math.cos(inc*index)*radius + radius,\n    })\n\n    tl.to(slides.current, {\n      rotate: \"+=360\",\n      ease: \"none\"\n    })\n  }\n\n  return (\n    <>\n    <div className={classes.root} ref={container}>\n      <div className={classes.inner}>\n        <div className={classes.slides} ref={slides}>\n          {Items}\n        </div>\n      </div>\n    </div>\n    <div className={classes.controller}>\n    <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<PlayCircleFilledWhiteIcon />}\n        onClick={onClick1}\n      >\n        ルーレット方法1\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<PlayCircleFilledWhiteIcon />}\n        onClick={onClick2}\n      >\n        ルーレット方法2\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<PlayCircleFilledWhiteIcon />}\n        onClick={onClick3}\n      >\n        ルーレット方法3\n      </Button>\n    </div>\n    </>\n  )\n\n}\n\nexport default ItemList","import ItemList from './components/ItemList'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ItemList></ItemList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}